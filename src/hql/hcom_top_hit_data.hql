create table ETL_HCOM_HEX_ASSIGNMENT_HIT
(guid string, cid int, experiment_variant_code string, local_date string, gmt int, hit_data_id bigint, new_visitor_ind smallint, page_assigned_entry_page_name string, site_sectn_name string, user_cntext_name string, browser_height smallint, browser_width smallint, brwsr_id smallint, mobile_ind string, destination_id int, property_destination_id int) STORED AS SEQUENCEFILE;

insert into table platdev.ETL_HCOM_HEX_ASSIGNMENT_HIT select e1.c44 as guid, e1.cid, test2. test_variant_code as experiment_variant_code, e1.local_date, e1.gmt, e1.hit_data_id, e1.new_visitor_ind, e1.page_assigned_entry_page_name, e1.site_sectn_name, e1. user_cntext_name, e1.browser_height, e1.browser_width, e1.brwsr_id, e1.c302 as mobile_ind, e1.destination_id, e1.property_destination_id from (select temp. min_hit_data_id, test_variant_code from (select firstValueNSort(hit_data_id, gmt, visit_page_number) min_hit_data_id, c44, cid, test_variant_code from etl_hcom_hit_data  LATERAL VIEW explode(split(c154,',')) tt as test_variant_code  where test_variant_code<>'' group by  c44, cid, test_variant_code) temp left outer join platdev.ETL_HCOM_HEX_ASSIGNMENT_HIT test1 on (temp.c44=test1.guid and temp.cid=test1.cid and test1.experiment_variant_code= temp.test_variant_code) where test1.guid is null) test2 join etl_hcom_hit_data e1 on (e1.hit_data_id= test2.min_hit_data_id);